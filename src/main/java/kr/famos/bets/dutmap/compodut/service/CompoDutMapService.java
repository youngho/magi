package kr.famos.bets.dutmap.compodut.service;

import kr.famos.bets.dutmap.compodut.dto.CompoDutMapDto;
import kr.famos.bets.dutmap.compodut.dto.CompoDutMapResultDto;
import kr.famos.bets.dutmap.compodut.mapper.CompoDutMapMapper;
import kr.famos.bets.dutmap.singledut.service.SingleDutMapService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by yhkim on 2017-03-10.
 */
@Service
public class CompoDutMapService {
    private static final Logger logger = LoggerFactory.getLogger(SingleDutMapService.class);
    @Autowired
    CompoDutMapMapper compoDutMapMapper;

    public List<CompoDutMapResultDto> retrieveCompoDutMap(CompoDutMapDto compoDutMapDto) {

        String strPASS_BIN = "YYYYNNNN";    // PASS BIN은 1~4로 일정 고정

        List<CompoDutMapResultDto> compoDutMapResultDtoList = new ArrayList<>();
        CompoDutMapResultDto totalRowDto = new CompoDutMapResultDto();
        CompoDutMapResultDto passRowDto = new CompoDutMapResultDto();
        CompoDutMapResultDto yieldRowDto = new CompoDutMapResultDto();
        List<CompoDutMapDto> compoDutMapDtoList = compoDutMapMapper.retrieveCompoDutMap(compoDutMapDto);
        totalRowDto.setPartNumber("TOTAL");
        passRowDto.setPartNumber("PASS");
        yieldRowDto.setPartNumber("YIELD");

        String mainBinNumber = "";

        //8개의 MAIN_BIN을 설정한다.
        for (int i = 1; i < 9; i++) {
            CompoDutMapResultDto mainBinDto = new CompoDutMapResultDto();
            mainBinDto.setMainBin(String.valueOf(i));
            compoDutMapResultDtoList.add(mainBinDto);
        }

        //검색된 목록에서 MAIN_BIN 번호를 찾는다.
        for (CompoDutMapDto list : compoDutMapDtoList) {

            //DUT_MAIN_BIN 추출
            String strTemp = list.getDutMainBin();
            String strDutMain = strTemp.replaceAll(",","");
//            logger.debug("DUT_MAIN_BIN 콤마 제거후" + strDutMain);


            // 한 글자씩 화면에 출력
            for (int i = 0; i < strDutMain.length(); i++) {
                CompoDutMapResultDto rowDto = new CompoDutMapResultDto();
//                System.out.println( strDutMain.charAt(i) );

                if (i == 0) {
                    for (int j = 0; j < 8; j++) {

                        compoDutMapResultDtoList.get(j).setPartNumber(list.getPartNumber());
                        compoDutMapResultDtoList.get(j).setProcessCode(list.getProcessCode());
                        compoDutMapResultDtoList.get(j).setTesterModel(list.getTesterModel());
                        compoDutMapResultDtoList.get(j).setTesterNumber(list.getTesterNumber());
                        compoDutMapResultDtoList.get(j).setHead(list.getHead());
                        compoDutMapResultDtoList.get(j).setTestCounter(list.getTestCounter());
                        compoDutMapResultDtoList.get(j).setMainProgramName(list.getMainProgramName());

                        logger.debug("들어온 문자 비교 : " + Integer.toString((int)strDutMain.charAt(i)-48));
                        rowDto = compoDutMapResultDtoList.get(j);
                        if (j == (int)strDutMain.charAt(i) - 49) {
                            rowDto.setSocket1(rowDto.getSocket1() + 1);    //기존 소켓에 있는 빈번호의 숫자 카운팅을 가져와 1을 더한다.
                            logger.debug("포문" + rowDto.getSocket1());
                            rowDto.setTotal(rowDto.getTotal() + 1);
                            rowDto.setTotal(rowDto.getTotal() + 1);
                            compoDutMapResultDtoList.set(j, rowDto);
                            totalRowDto.setSocket1(totalRowDto.getSocket1() + 1);
                            if ( 4 > (int)strDutMain.charAt(i) - 49){               //4보다 작으면 패스빈이다
                                passRowDto.setSocket1(passRowDto.getSocket1() +1);
                            }
                            yieldRowDto.setSocket1(totalRowDto.getSocket1()/passRowDto.getSocket1()*100);
                        }
                    }
                }
                if (i == 1) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket2(rowDto.getSocket2() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket2(totalRowDto.getSocket2() + 1);if ( 4 > (int)strDutMain.charAt(i) - 49){passRowDto.setSocket2(passRowDto.getSocket1() +1);}yieldRowDto.setSocket2(totalRowDto.getSocket2()/passRowDto.getSocket2()*100);}}}
                if (i == 2) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket3(rowDto.getSocket3() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket3(totalRowDto.getSocket3() + 1);if ( 4 > (int)strDutMain.charAt(i) - 49){passRowDto.setSocket3(passRowDto.getSocket3() +1);}yieldRowDto.setSocket3(totalRowDto.getSocket3()/passRowDto.getSocket3()*100);}}}
                if (i == 3) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket4(rowDto.getSocket4() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket4(totalRowDto.getSocket4() + 1);if ( 4 > (int)strDutMain.charAt(i) - 50){passRowDto.setSocket4(passRowDto.getSocket4() +1);}yieldRowDto.setSocket4(totalRowDto.getSocket4()/passRowDto.getSocket4()*100);}}}
                if (i == 4) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket5(rowDto.getSocket5() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket5(totalRowDto.getSocket5() + 1);if ( 4 > (int)strDutMain.charAt(i) - 51){passRowDto.setSocket5(passRowDto.getSocket5() +1);}yieldRowDto.setSocket5(totalRowDto.getSocket5()/passRowDto.getSocket5()*100);}}}
                if (i == 5) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket6(rowDto.getSocket6() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket6(totalRowDto.getSocket6() + 1);if ( 4 > (int)strDutMain.charAt(i) - 52){passRowDto.setSocket6(passRowDto.getSocket6() +1);}yieldRowDto.setSocket6(totalRowDto.getSocket6()/passRowDto.getSocket6()*100);}}}
                if (i == 6) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket7(rowDto.getSocket7() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket7(totalRowDto.getSocket7() + 1);if ( 4 > (int)strDutMain.charAt(i) - 53){passRowDto.setSocket7(passRowDto.getSocket7() +1);}yieldRowDto.setSocket7(totalRowDto.getSocket7()/passRowDto.getSocket7()*100);}}}
                if (i == 7) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket8(rowDto.getSocket8() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket8(totalRowDto.getSocket8() + 1);if ( 4 > (int)strDutMain.charAt(i) - 54){passRowDto.setSocket8(passRowDto.getSocket8() +1);}yieldRowDto.setSocket8(totalRowDto.getSocket8()/passRowDto.getSocket8()*100);}}}
                if (i == 8) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket9(rowDto.getSocket9() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket9(totalRowDto.getSocket9() + 1);if ( 4 > (int)strDutMain.charAt(i) - 55){passRowDto.setSocket9(passRowDto.getSocket9() +1);}yieldRowDto.setSocket9(totalRowDto.getSocket9()/passRowDto.getSocket9()*100);}}}
                if (i == 9) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket10(rowDto.getSocket10() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket10(totalRowDto.getSocket10() + 1);if ( 4 > (int)strDutMain.charAt(i) - 56){passRowDto.setSocket10(passRowDto.getSocket10() +1);}yieldRowDto.setSocket10(totalRowDto.getSocket10()/passRowDto.getSocket10()*100);}}}
                if (i == 10) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket11(rowDto.getSocket11() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket11(totalRowDto.getSocket11() + 1);if ( 4 > (int)strDutMain.charAt(i) - 57){passRowDto.setSocket11(passRowDto.getSocket11() +1);}yieldRowDto.setSocket11(totalRowDto.getSocket11()/passRowDto.getSocket11()*100);}}}
                if (i == 11) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket12(rowDto.getSocket12() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket12(totalRowDto.getSocket12() + 1);if ( 4 > (int)strDutMain.charAt(i) - 58){passRowDto.setSocket12(passRowDto.getSocket12() +1);}yieldRowDto.setSocket12(totalRowDto.getSocket12()/passRowDto.getSocket12()*100);}}}
                if (i == 12) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket13(rowDto.getSocket13() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket13(totalRowDto.getSocket13() + 1);if ( 4 > (int)strDutMain.charAt(i) - 59){passRowDto.setSocket13(passRowDto.getSocket13() +1);}yieldRowDto.setSocket13(totalRowDto.getSocket13()/passRowDto.getSocket13()*100);}}}
                if (i == 13) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket14(rowDto.getSocket14() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket14(totalRowDto.getSocket14() + 1);if ( 4 > (int)strDutMain.charAt(i) - 60){passRowDto.setSocket14(passRowDto.getSocket14() +1);}yieldRowDto.setSocket14(totalRowDto.getSocket14()/passRowDto.getSocket14()*100);}}}
                if (i == 14) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket15(rowDto.getSocket15() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket15(totalRowDto.getSocket15() + 1);if ( 4 > (int)strDutMain.charAt(i) - 61){passRowDto.setSocket15(passRowDto.getSocket15() +1);}yieldRowDto.setSocket15(totalRowDto.getSocket15()/passRowDto.getSocket15()*100);}}}
                if (i == 15) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket16(rowDto.getSocket16() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket16(totalRowDto.getSocket16() + 1);if ( 4 > (int)strDutMain.charAt(i) - 62){passRowDto.setSocket16(passRowDto.getSocket16() +1);}yieldRowDto.setSocket16(totalRowDto.getSocket16()/passRowDto.getSocket16()*100);}}}
                if (i == 16) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket17(rowDto.getSocket17() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket17(totalRowDto.getSocket17() + 1);if ( 4 > (int)strDutMain.charAt(i) - 63){passRowDto.setSocket17(passRowDto.getSocket17() +1);}yieldRowDto.setSocket17(totalRowDto.getSocket17()/passRowDto.getSocket17()*100);}}}
                if (i == 17) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket18(rowDto.getSocket18() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket18(totalRowDto.getSocket18() + 1);if ( 4 > (int)strDutMain.charAt(i) - 64){passRowDto.setSocket18(passRowDto.getSocket18() +1);}yieldRowDto.setSocket18(totalRowDto.getSocket18()/passRowDto.getSocket18()*100);}}}
                if (i == 18) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket19(rowDto.getSocket19() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket19(totalRowDto.getSocket19() + 1);if ( 4 > (int)strDutMain.charAt(i) - 65){passRowDto.setSocket19(passRowDto.getSocket19() +1);}yieldRowDto.setSocket19(totalRowDto.getSocket19()/passRowDto.getSocket19()*100);}}}
                if (i == 19) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket20(rowDto.getSocket20() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket20(totalRowDto.getSocket20() + 1);if ( 4 > (int)strDutMain.charAt(i) - 66){passRowDto.setSocket20(passRowDto.getSocket20() +1);}yieldRowDto.setSocket20(totalRowDto.getSocket20()/passRowDto.getSocket20()*100);}}}
                if (i == 20) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket21(rowDto.getSocket21() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket21(totalRowDto.getSocket21() + 1);if ( 4 > (int)strDutMain.charAt(i) - 67){passRowDto.setSocket21(passRowDto.getSocket21() +1);}yieldRowDto.setSocket21(totalRowDto.getSocket21()/passRowDto.getSocket21()*100);}}}
                if (i == 21) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket22(rowDto.getSocket22() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket22(totalRowDto.getSocket22() + 1);if ( 4 > (int)strDutMain.charAt(i) - 68){passRowDto.setSocket22(passRowDto.getSocket22() +1);}yieldRowDto.setSocket22(totalRowDto.getSocket22()/passRowDto.getSocket22()*100);}}}
                if (i == 22) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket23(rowDto.getSocket23() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket23(totalRowDto.getSocket23() + 1);if ( 4 > (int)strDutMain.charAt(i) - 69){passRowDto.setSocket23(passRowDto.getSocket23() +1);}yieldRowDto.setSocket23(totalRowDto.getSocket23()/passRowDto.getSocket23()*100);}}}
                if (i == 23) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket24(rowDto.getSocket24() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket24(totalRowDto.getSocket24() + 1);if ( 4 > (int)strDutMain.charAt(i) - 70){passRowDto.setSocket24(passRowDto.getSocket24() +1);}yieldRowDto.setSocket24(totalRowDto.getSocket24()/passRowDto.getSocket24()*100);}}}
                if (i == 24) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket25(rowDto.getSocket25() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket25(totalRowDto.getSocket25() + 1);if ( 4 > (int)strDutMain.charAt(i) - 71){passRowDto.setSocket25(passRowDto.getSocket25() +1);}yieldRowDto.setSocket25(totalRowDto.getSocket25()/passRowDto.getSocket25()*100);}}}
                if (i == 25) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket26(rowDto.getSocket26() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket26(totalRowDto.getSocket26() + 1);if ( 4 > (int)strDutMain.charAt(i) - 72){passRowDto.setSocket26(passRowDto.getSocket26() +1);}yieldRowDto.setSocket26(totalRowDto.getSocket26()/passRowDto.getSocket26()*100);}}}
                if (i == 26) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket27(rowDto.getSocket27() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket27(totalRowDto.getSocket27() + 1);if ( 4 > (int)strDutMain.charAt(i) - 73){passRowDto.setSocket27(passRowDto.getSocket27() +1);}yieldRowDto.setSocket27(totalRowDto.getSocket27()/passRowDto.getSocket27()*100);}}}
                if (i == 27) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket28(rowDto.getSocket28() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket28(totalRowDto.getSocket28() + 1);if ( 4 > (int)strDutMain.charAt(i) - 74){passRowDto.setSocket28(passRowDto.getSocket28() +1);}yieldRowDto.setSocket28(totalRowDto.getSocket28()/passRowDto.getSocket28()*100);}}}
                if (i == 28) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket29(rowDto.getSocket29() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket29(totalRowDto.getSocket29() + 1);if ( 4 > (int)strDutMain.charAt(i) - 75){passRowDto.setSocket29(passRowDto.getSocket29() +1);}yieldRowDto.setSocket29(totalRowDto.getSocket29()/passRowDto.getSocket29()*100);}}}
                if (i == 29) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket30(rowDto.getSocket30() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket30(totalRowDto.getSocket30() + 1);if ( 4 > (int)strDutMain.charAt(i) - 76){passRowDto.setSocket30(passRowDto.getSocket30() +1);}yieldRowDto.setSocket30(totalRowDto.getSocket30()/passRowDto.getSocket30()*100);}}}
                if (i == 30) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket31(rowDto.getSocket31() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket31(totalRowDto.getSocket31() + 1);if ( 4 > (int)strDutMain.charAt(i) - 77){passRowDto.setSocket31(passRowDto.getSocket31() +1);}yieldRowDto.setSocket31(totalRowDto.getSocket31()/passRowDto.getSocket31()*100);}}}
                if (i == 31) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket32(rowDto.getSocket32() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket32(totalRowDto.getSocket32() + 1);if ( 4 > (int)strDutMain.charAt(i) - 78){passRowDto.setSocket32(passRowDto.getSocket32() +1);}yieldRowDto.setSocket32(totalRowDto.getSocket32()/passRowDto.getSocket32()*100);}}}
                if (i == 32) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket33(rowDto.getSocket33() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket33(totalRowDto.getSocket33() + 1);if ( 4 > (int)strDutMain.charAt(i) - 79){passRowDto.setSocket33(passRowDto.getSocket33() +1);}yieldRowDto.setSocket33(totalRowDto.getSocket33()/passRowDto.getSocket33()*100);}}}
                if (i == 33) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket34(rowDto.getSocket34() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket34(totalRowDto.getSocket34() + 1);if ( 4 > (int)strDutMain.charAt(i) - 80){passRowDto.setSocket34(passRowDto.getSocket34() +1);}yieldRowDto.setSocket34(totalRowDto.getSocket34()/passRowDto.getSocket34()*100);}}}
                if (i == 34) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket35(rowDto.getSocket35() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket35(totalRowDto.getSocket35() + 1);if ( 4 > (int)strDutMain.charAt(i) - 81){passRowDto.setSocket35(passRowDto.getSocket35() +1);}yieldRowDto.setSocket35(totalRowDto.getSocket35()/passRowDto.getSocket35()*100);}}}
                if (i == 35) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket36(rowDto.getSocket36() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket36(totalRowDto.getSocket36() + 1);if ( 4 > (int)strDutMain.charAt(i) - 82){passRowDto.setSocket36(passRowDto.getSocket36() +1);}yieldRowDto.setSocket36(totalRowDto.getSocket36()/passRowDto.getSocket36()*100);}}}
                if (i == 36) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket37(rowDto.getSocket37() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket37(totalRowDto.getSocket37() + 1);if ( 4 > (int)strDutMain.charAt(i) - 83){passRowDto.setSocket37(passRowDto.getSocket37() +1);}yieldRowDto.setSocket37(totalRowDto.getSocket37()/passRowDto.getSocket37()*100);}}}
                if (i == 37) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket38(rowDto.getSocket38() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket38(totalRowDto.getSocket38() + 1);if ( 4 > (int)strDutMain.charAt(i) - 84){passRowDto.setSocket38(passRowDto.getSocket38() +1);}yieldRowDto.setSocket38(totalRowDto.getSocket38()/passRowDto.getSocket38()*100);}}}
                if (i == 38) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket39(rowDto.getSocket39() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket39(totalRowDto.getSocket39() + 1);if ( 4 > (int)strDutMain.charAt(i) - 85){passRowDto.setSocket39(passRowDto.getSocket39() +1);}yieldRowDto.setSocket39(totalRowDto.getSocket39()/passRowDto.getSocket39()*100);}}}
                if (i == 39) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket40(rowDto.getSocket40() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket40(totalRowDto.getSocket40() + 1);if ( 4 > (int)strDutMain.charAt(i) - 86){passRowDto.setSocket40(passRowDto.getSocket40() +1);}yieldRowDto.setSocket40(totalRowDto.getSocket40()/passRowDto.getSocket40()*100);}}}
                if (i == 40) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket41(rowDto.getSocket41() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket41(totalRowDto.getSocket41() + 1);if ( 4 > (int)strDutMain.charAt(i) - 87){passRowDto.setSocket41(passRowDto.getSocket41() +1);}yieldRowDto.setSocket41(totalRowDto.getSocket41()/passRowDto.getSocket41()*100);}}}
                if (i == 41) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket42(rowDto.getSocket42() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket42(totalRowDto.getSocket42() + 1);if ( 4 > (int)strDutMain.charAt(i) - 88){passRowDto.setSocket42(passRowDto.getSocket42() +1);}yieldRowDto.setSocket42(totalRowDto.getSocket42()/passRowDto.getSocket42()*100);}}}
                if (i == 42) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket43(rowDto.getSocket43() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket43(totalRowDto.getSocket43() + 1);if ( 4 > (int)strDutMain.charAt(i) - 89){passRowDto.setSocket43(passRowDto.getSocket43() +1);}yieldRowDto.setSocket43(totalRowDto.getSocket43()/passRowDto.getSocket43()*100);}}}
                if (i == 43) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket44(rowDto.getSocket44() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket44(totalRowDto.getSocket44() + 1);if ( 4 > (int)strDutMain.charAt(i) - 90){passRowDto.setSocket44(passRowDto.getSocket44() +1);}yieldRowDto.setSocket44(totalRowDto.getSocket44()/passRowDto.getSocket44()*100);}}}
                if (i == 44) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket45(rowDto.getSocket45() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket45(totalRowDto.getSocket45() + 1);if ( 4 > (int)strDutMain.charAt(i) - 91){passRowDto.setSocket45(passRowDto.getSocket45() +1);}yieldRowDto.setSocket45(totalRowDto.getSocket45()/passRowDto.getSocket45()*100);}}}
                if (i == 45) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket46(rowDto.getSocket46() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket46(totalRowDto.getSocket46() + 1);if ( 4 > (int)strDutMain.charAt(i) - 92){passRowDto.setSocket46(passRowDto.getSocket46() +1);}yieldRowDto.setSocket46(totalRowDto.getSocket46()/passRowDto.getSocket46()*100);}}}
                if (i == 46) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket47(rowDto.getSocket47() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket47(totalRowDto.getSocket47() + 1);if ( 4 > (int)strDutMain.charAt(i) - 93){passRowDto.setSocket47(passRowDto.getSocket47() +1);}yieldRowDto.setSocket47(totalRowDto.getSocket47()/passRowDto.getSocket47()*100);}}}
                if (i == 47) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket48(rowDto.getSocket48() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket48(totalRowDto.getSocket48() + 1);if ( 4 > (int)strDutMain.charAt(i) - 94){passRowDto.setSocket48(passRowDto.getSocket48() +1);}yieldRowDto.setSocket48(totalRowDto.getSocket48()/passRowDto.getSocket48()*100);}}}
                if (i == 48) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket49(rowDto.getSocket49() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket49(totalRowDto.getSocket49() + 1);if ( 4 > (int)strDutMain.charAt(i) - 95){passRowDto.setSocket49(passRowDto.getSocket49() +1);}yieldRowDto.setSocket49(totalRowDto.getSocket49()/passRowDto.getSocket49()*100);}}}
                if (i == 49) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket50(rowDto.getSocket50() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket50(totalRowDto.getSocket50() + 1);if ( 4 > (int)strDutMain.charAt(i) - 96){passRowDto.setSocket50(passRowDto.getSocket50() +1);}yieldRowDto.setSocket50(totalRowDto.getSocket50()/passRowDto.getSocket50()*100);}}}
                if (i == 50) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket51(rowDto.getSocket51() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket51(totalRowDto.getSocket51() + 1);if ( 4 > (int)strDutMain.charAt(i) - 97){passRowDto.setSocket51(passRowDto.getSocket51() +1);}yieldRowDto.setSocket51(totalRowDto.getSocket51()/passRowDto.getSocket51()*100);}}}
                if (i == 51) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket52(rowDto.getSocket52() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket52(totalRowDto.getSocket52() + 1);if ( 4 > (int)strDutMain.charAt(i) - 98){passRowDto.setSocket52(passRowDto.getSocket52() +1);}yieldRowDto.setSocket52(totalRowDto.getSocket52()/passRowDto.getSocket52()*100);}}}
                if (i == 52) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket53(rowDto.getSocket53() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket53(totalRowDto.getSocket53() + 1);if ( 4 > (int)strDutMain.charAt(i) - 99){passRowDto.setSocket53(passRowDto.getSocket53() +1);}yieldRowDto.setSocket53(totalRowDto.getSocket53()/passRowDto.getSocket53()*100);}}}
                if (i == 53) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket54(rowDto.getSocket54() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket54(totalRowDto.getSocket54() + 1);if ( 4 > (int)strDutMain.charAt(i) - 100){passRowDto.setSocket54(passRowDto.getSocket54() +1);}yieldRowDto.setSocket54(totalRowDto.getSocket54()/passRowDto.getSocket54()*100);}}}
                if (i == 54) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket55(rowDto.getSocket55() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket55(totalRowDto.getSocket55() + 1);if ( 4 > (int)strDutMain.charAt(i) - 101){passRowDto.setSocket55(passRowDto.getSocket55() +1);}yieldRowDto.setSocket55(totalRowDto.getSocket55()/passRowDto.getSocket55()*100);}}}
                if (i == 55) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket56(rowDto.getSocket56() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket56(totalRowDto.getSocket56() + 1);if ( 4 > (int)strDutMain.charAt(i) - 102){passRowDto.setSocket56(passRowDto.getSocket56() +1);}yieldRowDto.setSocket56(totalRowDto.getSocket56()/passRowDto.getSocket56()*100);}}}
                if (i == 56) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket57(rowDto.getSocket57() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket57(totalRowDto.getSocket57() + 1);if ( 4 > (int)strDutMain.charAt(i) - 103){passRowDto.setSocket57(passRowDto.getSocket57() +1);}yieldRowDto.setSocket57(totalRowDto.getSocket57()/passRowDto.getSocket57()*100);}}}
                if (i == 57) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket58(rowDto.getSocket58() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket58(totalRowDto.getSocket58() + 1);if ( 4 > (int)strDutMain.charAt(i) - 104){passRowDto.setSocket58(passRowDto.getSocket58() +1);}yieldRowDto.setSocket58(totalRowDto.getSocket58()/passRowDto.getSocket58()*100);}}}
                if (i == 58) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket59(rowDto.getSocket59() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket59(totalRowDto.getSocket59() + 1);if ( 4 > (int)strDutMain.charAt(i) - 105){passRowDto.setSocket59(passRowDto.getSocket59() +1);}yieldRowDto.setSocket59(totalRowDto.getSocket59()/passRowDto.getSocket59()*100);}}}
                if (i == 59) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket60(rowDto.getSocket60() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket60(totalRowDto.getSocket60() + 1);if ( 4 > (int)strDutMain.charAt(i) - 106){passRowDto.setSocket60(passRowDto.getSocket60() +1);}yieldRowDto.setSocket60(totalRowDto.getSocket60()/passRowDto.getSocket60()*100);}}}
                if (i == 60) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket61(rowDto.getSocket61() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket61(totalRowDto.getSocket61() + 1);if ( 4 > (int)strDutMain.charAt(i) - 107){passRowDto.setSocket61(passRowDto.getSocket61() +1);}yieldRowDto.setSocket61(totalRowDto.getSocket61()/passRowDto.getSocket61()*100);}}}
                if (i == 61) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket62(rowDto.getSocket62() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket62(totalRowDto.getSocket62() + 1);if ( 4 > (int)strDutMain.charAt(i) - 108){passRowDto.setSocket62(passRowDto.getSocket62() +1);}yieldRowDto.setSocket62(totalRowDto.getSocket62()/passRowDto.getSocket62()*100);}}}
                if (i == 62) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket63(rowDto.getSocket63() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket63(totalRowDto.getSocket63() + 1);if ( 4 > (int)strDutMain.charAt(i) - 109){passRowDto.setSocket63(passRowDto.getSocket63() +1);}yieldRowDto.setSocket63(totalRowDto.getSocket63()/passRowDto.getSocket63()*100);}}}
                if (i == 63) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket64(rowDto.getSocket64() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket64(totalRowDto.getSocket64() + 1);if ( 4 > (int)strDutMain.charAt(i) - 110){passRowDto.setSocket64(passRowDto.getSocket64() +1);}yieldRowDto.setSocket64(totalRowDto.getSocket64()/passRowDto.getSocket64()*100);}}}
                if (i == 64) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket65(rowDto.getSocket65() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket65(totalRowDto.getSocket65() + 1);if ( 4 > (int)strDutMain.charAt(i) - 111){passRowDto.setSocket65(passRowDto.getSocket65() +1);}yieldRowDto.setSocket65(totalRowDto.getSocket65()/passRowDto.getSocket65()*100);}}}
                if (i == 65) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket66(rowDto.getSocket66() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket66(totalRowDto.getSocket66() + 1);if ( 4 > (int)strDutMain.charAt(i) - 112){passRowDto.setSocket66(passRowDto.getSocket66() +1);}yieldRowDto.setSocket66(totalRowDto.getSocket66()/passRowDto.getSocket66()*100);}}}
                if (i == 66) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket67(rowDto.getSocket67() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket67(totalRowDto.getSocket67() + 1);if ( 4 > (int)strDutMain.charAt(i) - 113){passRowDto.setSocket67(passRowDto.getSocket67() +1);}yieldRowDto.setSocket67(totalRowDto.getSocket67()/passRowDto.getSocket67()*100);}}}
                if (i == 67) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket68(rowDto.getSocket68() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket68(totalRowDto.getSocket68() + 1);if ( 4 > (int)strDutMain.charAt(i) - 114){passRowDto.setSocket68(passRowDto.getSocket68() +1);}yieldRowDto.setSocket68(totalRowDto.getSocket68()/passRowDto.getSocket68()*100);}}}
                if (i == 68) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket69(rowDto.getSocket69() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket69(totalRowDto.getSocket69() + 1);if ( 4 > (int)strDutMain.charAt(i) - 115){passRowDto.setSocket69(passRowDto.getSocket69() +1);}yieldRowDto.setSocket69(totalRowDto.getSocket69()/passRowDto.getSocket69()*100);}}}
                if (i == 69) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket70(rowDto.getSocket70() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket70(totalRowDto.getSocket70() + 1);if ( 4 > (int)strDutMain.charAt(i) - 116){passRowDto.setSocket70(passRowDto.getSocket70() +1);}yieldRowDto.setSocket70(totalRowDto.getSocket70()/passRowDto.getSocket70()*100);}}}
                if (i == 70) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket71(rowDto.getSocket71() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket71(totalRowDto.getSocket71() + 1);if ( 4 > (int)strDutMain.charAt(i) - 117){passRowDto.setSocket71(passRowDto.getSocket71() +1);}yieldRowDto.setSocket71(totalRowDto.getSocket71()/passRowDto.getSocket71()*100);}}}
                if (i == 71) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket72(rowDto.getSocket72() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket72(totalRowDto.getSocket72() + 1);if ( 4 > (int)strDutMain.charAt(i) - 118){passRowDto.setSocket72(passRowDto.getSocket72() +1);}yieldRowDto.setSocket72(totalRowDto.getSocket72()/passRowDto.getSocket72()*100);}}}
                if (i == 72) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket73(rowDto.getSocket73() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket73(totalRowDto.getSocket73() + 1);if ( 4 > (int)strDutMain.charAt(i) - 119){passRowDto.setSocket73(passRowDto.getSocket73() +1);}yieldRowDto.setSocket73(totalRowDto.getSocket73()/passRowDto.getSocket73()*100);}}}
                if (i == 73) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket74(rowDto.getSocket74() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket74(totalRowDto.getSocket74() + 1);if ( 4 > (int)strDutMain.charAt(i) - 120){passRowDto.setSocket74(passRowDto.getSocket74() +1);}yieldRowDto.setSocket74(totalRowDto.getSocket74()/passRowDto.getSocket74()*100);}}}
                if (i == 74) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket75(rowDto.getSocket75() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket75(totalRowDto.getSocket75() + 1);if ( 4 > (int)strDutMain.charAt(i) - 121){passRowDto.setSocket75(passRowDto.getSocket75() +1);}yieldRowDto.setSocket75(totalRowDto.getSocket75()/passRowDto.getSocket75()*100);}}}
                if (i == 75) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket76(rowDto.getSocket76() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket76(totalRowDto.getSocket76() + 1);if ( 4 > (int)strDutMain.charAt(i) - 122){passRowDto.setSocket76(passRowDto.getSocket76() +1);}yieldRowDto.setSocket76(totalRowDto.getSocket76()/passRowDto.getSocket76()*100);}}}
                if (i == 76) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket77(rowDto.getSocket77() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket77(totalRowDto.getSocket77() + 1);if ( 4 > (int)strDutMain.charAt(i) - 123){passRowDto.setSocket77(passRowDto.getSocket77() +1);}yieldRowDto.setSocket77(totalRowDto.getSocket77()/passRowDto.getSocket77()*100);}}}
                if (i == 77) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket78(rowDto.getSocket78() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket78(totalRowDto.getSocket78() + 1);if ( 4 > (int)strDutMain.charAt(i) - 124){passRowDto.setSocket78(passRowDto.getSocket78() +1);}yieldRowDto.setSocket78(totalRowDto.getSocket78()/passRowDto.getSocket78()*100);}}}
                if (i == 78) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket79(rowDto.getSocket79() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket79(totalRowDto.getSocket79() + 1);if ( 4 > (int)strDutMain.charAt(i) - 125){passRowDto.setSocket79(passRowDto.getSocket79() +1);}yieldRowDto.setSocket79(totalRowDto.getSocket79()/passRowDto.getSocket79()*100);}}}
                if (i == 79) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket80(rowDto.getSocket80() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket80(totalRowDto.getSocket80() + 1);if ( 4 > (int)strDutMain.charAt(i) - 126){passRowDto.setSocket80(passRowDto.getSocket80() +1);}yieldRowDto.setSocket80(totalRowDto.getSocket80()/passRowDto.getSocket80()*100);}}}
                if (i == 80) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket81(rowDto.getSocket81() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket81(totalRowDto.getSocket81() + 1);if ( 4 > (int)strDutMain.charAt(i) - 127){passRowDto.setSocket81(passRowDto.getSocket81() +1);}yieldRowDto.setSocket81(totalRowDto.getSocket81()/passRowDto.getSocket81()*100);}}}
                if (i == 81) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket82(rowDto.getSocket82() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket82(totalRowDto.getSocket82() + 1);if ( 4 > (int)strDutMain.charAt(i) - 128){passRowDto.setSocket82(passRowDto.getSocket82() +1);}yieldRowDto.setSocket82(totalRowDto.getSocket82()/passRowDto.getSocket82()*100);}}}
                if (i == 82) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket83(rowDto.getSocket83() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket83(totalRowDto.getSocket83() + 1);if ( 4 > (int)strDutMain.charAt(i) - 129){passRowDto.setSocket83(passRowDto.getSocket83() +1);}yieldRowDto.setSocket83(totalRowDto.getSocket83()/passRowDto.getSocket83()*100);}}}
                if (i == 83) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket84(rowDto.getSocket84() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket84(totalRowDto.getSocket84() + 1);if ( 4 > (int)strDutMain.charAt(i) - 130){passRowDto.setSocket84(passRowDto.getSocket84() +1);}yieldRowDto.setSocket84(totalRowDto.getSocket84()/passRowDto.getSocket84()*100);}}}
                if (i == 84) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket85(rowDto.getSocket85() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket85(totalRowDto.getSocket85() + 1);if ( 4 > (int)strDutMain.charAt(i) - 131){passRowDto.setSocket85(passRowDto.getSocket85() +1);}yieldRowDto.setSocket85(totalRowDto.getSocket85()/passRowDto.getSocket85()*100);}}}
                if (i == 85) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket86(rowDto.getSocket86() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket86(totalRowDto.getSocket86() + 1);if ( 4 > (int)strDutMain.charAt(i) - 132){passRowDto.setSocket86(passRowDto.getSocket86() +1);}yieldRowDto.setSocket86(totalRowDto.getSocket86()/passRowDto.getSocket86()*100);}}}
                if (i == 86) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket87(rowDto.getSocket87() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket87(totalRowDto.getSocket87() + 1);if ( 4 > (int)strDutMain.charAt(i) - 133){passRowDto.setSocket87(passRowDto.getSocket87() +1);}yieldRowDto.setSocket87(totalRowDto.getSocket87()/passRowDto.getSocket87()*100);}}}
                if (i == 87) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket88(rowDto.getSocket88() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket88(totalRowDto.getSocket88() + 1);if ( 4 > (int)strDutMain.charAt(i) - 134){passRowDto.setSocket88(passRowDto.getSocket88() +1);}yieldRowDto.setSocket88(totalRowDto.getSocket88()/passRowDto.getSocket88()*100);}}}
                if (i == 88) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket89(rowDto.getSocket89() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket89(totalRowDto.getSocket89() + 1);if ( 4 > (int)strDutMain.charAt(i) - 135){passRowDto.setSocket89(passRowDto.getSocket89() +1);}yieldRowDto.setSocket89(totalRowDto.getSocket89()/passRowDto.getSocket89()*100);}}}
                if (i == 89) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket90(rowDto.getSocket90() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket90(totalRowDto.getSocket90() + 1);if ( 4 > (int)strDutMain.charAt(i) - 136){passRowDto.setSocket90(passRowDto.getSocket90() +1);}yieldRowDto.setSocket90(totalRowDto.getSocket90()/passRowDto.getSocket90()*100);}}}
                if (i == 90) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket91(rowDto.getSocket91() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket91(totalRowDto.getSocket91() + 1);if ( 4 > (int)strDutMain.charAt(i) - 137){passRowDto.setSocket91(passRowDto.getSocket91() +1);}yieldRowDto.setSocket91(totalRowDto.getSocket91()/passRowDto.getSocket91()*100);}}}
                if (i == 91) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket92(rowDto.getSocket92() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket92(totalRowDto.getSocket92() + 1);if ( 4 > (int)strDutMain.charAt(i) - 138){passRowDto.setSocket92(passRowDto.getSocket92() +1);}yieldRowDto.setSocket92(totalRowDto.getSocket92()/passRowDto.getSocket92()*100);}}}
                if (i == 92) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket93(rowDto.getSocket93() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket93(totalRowDto.getSocket93() + 1);if ( 4 > (int)strDutMain.charAt(i) - 139){passRowDto.setSocket93(passRowDto.getSocket93() +1);}yieldRowDto.setSocket93(totalRowDto.getSocket93()/passRowDto.getSocket93()*100);}}}
                if (i == 93) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket94(rowDto.getSocket94() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket94(totalRowDto.getSocket94() + 1);if ( 4 > (int)strDutMain.charAt(i) - 140){passRowDto.setSocket94(passRowDto.getSocket94() +1);}yieldRowDto.setSocket94(totalRowDto.getSocket94()/passRowDto.getSocket94()*100);}}}
                if (i == 94) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket95(rowDto.getSocket95() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket95(totalRowDto.getSocket95() + 1);if ( 4 > (int)strDutMain.charAt(i) - 141){passRowDto.setSocket95(passRowDto.getSocket95() +1);}yieldRowDto.setSocket95(totalRowDto.getSocket95()/passRowDto.getSocket95()*100);}}}
                if (i == 95) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket96(rowDto.getSocket96() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket96(totalRowDto.getSocket96() + 1);if ( 4 > (int)strDutMain.charAt(i) - 142){passRowDto.setSocket96(passRowDto.getSocket96() +1);}yieldRowDto.setSocket96(totalRowDto.getSocket96()/passRowDto.getSocket96()*100);}}}
                if (i == 96) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket97(rowDto.getSocket97() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket97(totalRowDto.getSocket97() + 1);if ( 4 > (int)strDutMain.charAt(i) - 143){passRowDto.setSocket97(passRowDto.getSocket97() +1);}yieldRowDto.setSocket97(totalRowDto.getSocket97()/passRowDto.getSocket97()*100);}}}
                if (i == 97) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket98(rowDto.getSocket98() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket98(totalRowDto.getSocket98() + 1);if ( 4 > (int)strDutMain.charAt(i) - 144){passRowDto.setSocket98(passRowDto.getSocket98() +1);}yieldRowDto.setSocket98(totalRowDto.getSocket98()/passRowDto.getSocket98()*100);}}}
                if (i == 98) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket99(rowDto.getSocket99() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket99(totalRowDto.getSocket99() + 1);if ( 4 > (int)strDutMain.charAt(i) - 145){passRowDto.setSocket99(passRowDto.getSocket99() +1);}yieldRowDto.setSocket99(totalRowDto.getSocket99()/passRowDto.getSocket99()*100);}}}
                if (i == 99) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket100(rowDto.getSocket100() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket100(totalRowDto.getSocket100() + 1);if ( 4 > (int)strDutMain.charAt(i) - 146){passRowDto.setSocket100(passRowDto.getSocket100() +1);}yieldRowDto.setSocket100(totalRowDto.getSocket100()/passRowDto.getSocket100()*100);}}}
                if (i == 100) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket101(rowDto.getSocket101() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket101(totalRowDto.getSocket101() + 1);if ( 4 > (int)strDutMain.charAt(i) - 147){passRowDto.setSocket101(passRowDto.getSocket101() +1);}yieldRowDto.setSocket101(totalRowDto.getSocket101()/passRowDto.getSocket101()*100);}}}
                if (i == 101) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket102(rowDto.getSocket102() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket102(totalRowDto.getSocket102() + 1);if ( 4 > (int)strDutMain.charAt(i) - 148){passRowDto.setSocket102(passRowDto.getSocket102() +1);}yieldRowDto.setSocket102(totalRowDto.getSocket102()/passRowDto.getSocket102()*100);}}}
                if (i == 102) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket103(rowDto.getSocket103() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket103(totalRowDto.getSocket103() + 1);if ( 4 > (int)strDutMain.charAt(i) - 149){passRowDto.setSocket103(passRowDto.getSocket103() +1);}yieldRowDto.setSocket103(totalRowDto.getSocket103()/passRowDto.getSocket103()*100);}}}
                if (i == 103) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket104(rowDto.getSocket104() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket104(totalRowDto.getSocket104() + 1);if ( 4 > (int)strDutMain.charAt(i) - 150){passRowDto.setSocket104(passRowDto.getSocket104() +1);}yieldRowDto.setSocket104(totalRowDto.getSocket104()/passRowDto.getSocket104()*100);}}}
                if (i == 104) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket105(rowDto.getSocket105() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket105(totalRowDto.getSocket105() + 1);if ( 4 > (int)strDutMain.charAt(i) - 151){passRowDto.setSocket105(passRowDto.getSocket105() +1);}yieldRowDto.setSocket105(totalRowDto.getSocket105()/passRowDto.getSocket105()*100);}}}
                if (i == 105) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket106(rowDto.getSocket106() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket106(totalRowDto.getSocket106() + 1);if ( 4 > (int)strDutMain.charAt(i) - 152){passRowDto.setSocket106(passRowDto.getSocket106() +1);}yieldRowDto.setSocket106(totalRowDto.getSocket106()/passRowDto.getSocket106()*100);}}}
                if (i == 106) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket107(rowDto.getSocket107() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket107(totalRowDto.getSocket107() + 1);if ( 4 > (int)strDutMain.charAt(i) - 153){passRowDto.setSocket107(passRowDto.getSocket107() +1);}yieldRowDto.setSocket107(totalRowDto.getSocket107()/passRowDto.getSocket107()*100);}}}
                if (i == 107) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket108(rowDto.getSocket108() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket108(totalRowDto.getSocket108() + 1);if ( 4 > (int)strDutMain.charAt(i) - 154){passRowDto.setSocket108(passRowDto.getSocket108() +1);}yieldRowDto.setSocket108(totalRowDto.getSocket108()/passRowDto.getSocket108()*100);}}}
                if (i == 108) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket109(rowDto.getSocket109() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket109(totalRowDto.getSocket109() + 1);if ( 4 > (int)strDutMain.charAt(i) - 155){passRowDto.setSocket109(passRowDto.getSocket109() +1);}yieldRowDto.setSocket109(totalRowDto.getSocket109()/passRowDto.getSocket109()*100);}}}
                if (i == 109) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket110(rowDto.getSocket110() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket110(totalRowDto.getSocket110() + 1);if ( 4 > (int)strDutMain.charAt(i) - 156){passRowDto.setSocket110(passRowDto.getSocket110() +1);}yieldRowDto.setSocket110(totalRowDto.getSocket110()/passRowDto.getSocket110()*100);}}}
                if (i == 110) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket111(rowDto.getSocket111() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket111(totalRowDto.getSocket111() + 1);if ( 4 > (int)strDutMain.charAt(i) - 157){passRowDto.setSocket111(passRowDto.getSocket111() +1);}yieldRowDto.setSocket111(totalRowDto.getSocket111()/passRowDto.getSocket111()*100);}}}
                if (i == 111) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket112(rowDto.getSocket112() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket112(totalRowDto.getSocket112() + 1);if ( 4 > (int)strDutMain.charAt(i) - 158){passRowDto.setSocket112(passRowDto.getSocket112() +1);}yieldRowDto.setSocket112(totalRowDto.getSocket112()/passRowDto.getSocket112()*100);}}}
                if (i == 112) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket113(rowDto.getSocket113() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket113(totalRowDto.getSocket113() + 1);if ( 4 > (int)strDutMain.charAt(i) - 159){passRowDto.setSocket113(passRowDto.getSocket113() +1);}yieldRowDto.setSocket113(totalRowDto.getSocket113()/passRowDto.getSocket113()*100);}}}
                if (i == 113) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket114(rowDto.getSocket114() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket114(totalRowDto.getSocket114() + 1);if ( 4 > (int)strDutMain.charAt(i) - 160){passRowDto.setSocket114(passRowDto.getSocket114() +1);}yieldRowDto.setSocket114(totalRowDto.getSocket114()/passRowDto.getSocket114()*100);}}}
                if (i == 114) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket115(rowDto.getSocket115() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket115(totalRowDto.getSocket115() + 1);if ( 4 > (int)strDutMain.charAt(i) - 161){passRowDto.setSocket115(passRowDto.getSocket115() +1);}yieldRowDto.setSocket115(totalRowDto.getSocket115()/passRowDto.getSocket115()*100);}}}
                if (i == 115) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket116(rowDto.getSocket116() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket116(totalRowDto.getSocket116() + 1);if ( 4 > (int)strDutMain.charAt(i) - 162){passRowDto.setSocket116(passRowDto.getSocket116() +1);}yieldRowDto.setSocket116(totalRowDto.getSocket116()/passRowDto.getSocket116()*100);}}}
                if (i == 116) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket117(rowDto.getSocket117() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket117(totalRowDto.getSocket117() + 1);if ( 4 > (int)strDutMain.charAt(i) - 163){passRowDto.setSocket117(passRowDto.getSocket117() +1);}yieldRowDto.setSocket117(totalRowDto.getSocket117()/passRowDto.getSocket117()*100);}}}
                if (i == 117) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket118(rowDto.getSocket118() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket118(totalRowDto.getSocket118() + 1);if ( 4 > (int)strDutMain.charAt(i) - 164){passRowDto.setSocket118(passRowDto.getSocket118() +1);}yieldRowDto.setSocket118(totalRowDto.getSocket118()/passRowDto.getSocket118()*100);}}}
                if (i == 118) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket119(rowDto.getSocket119() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket119(totalRowDto.getSocket119() + 1);if ( 4 > (int)strDutMain.charAt(i) - 165){passRowDto.setSocket119(passRowDto.getSocket119() +1);}yieldRowDto.setSocket119(totalRowDto.getSocket119()/passRowDto.getSocket119()*100);}}}
                if (i == 119) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket120(rowDto.getSocket120() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket120(totalRowDto.getSocket120() + 1);if ( 4 > (int)strDutMain.charAt(i) - 166){passRowDto.setSocket120(passRowDto.getSocket120() +1);}yieldRowDto.setSocket120(totalRowDto.getSocket120()/passRowDto.getSocket120()*100);}}}
                if (i == 120) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket121(rowDto.getSocket121() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket121(totalRowDto.getSocket121() + 1);if ( 4 > (int)strDutMain.charAt(i) - 167){passRowDto.setSocket121(passRowDto.getSocket121() +1);}yieldRowDto.setSocket121(totalRowDto.getSocket121()/passRowDto.getSocket121()*100);}}}
                if (i == 121) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket122(rowDto.getSocket122() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket122(totalRowDto.getSocket122() + 1);if ( 4 > (int)strDutMain.charAt(i) - 168){passRowDto.setSocket122(passRowDto.getSocket122() +1);}yieldRowDto.setSocket122(totalRowDto.getSocket122()/passRowDto.getSocket122()*100);}}}
                if (i == 122) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket123(rowDto.getSocket123() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket123(totalRowDto.getSocket123() + 1);if ( 4 > (int)strDutMain.charAt(i) - 169){passRowDto.setSocket123(passRowDto.getSocket123() +1);}yieldRowDto.setSocket123(totalRowDto.getSocket123()/passRowDto.getSocket123()*100);}}}
                if (i == 123) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket124(rowDto.getSocket124() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket124(totalRowDto.getSocket124() + 1);if ( 4 > (int)strDutMain.charAt(i) - 170){passRowDto.setSocket124(passRowDto.getSocket124() +1);}yieldRowDto.setSocket124(totalRowDto.getSocket124()/passRowDto.getSocket124()*100);}}}
                if (i == 124) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket125(rowDto.getSocket125() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket125(totalRowDto.getSocket125() + 1);if ( 4 > (int)strDutMain.charAt(i) - 171){passRowDto.setSocket125(passRowDto.getSocket125() +1);}yieldRowDto.setSocket125(totalRowDto.getSocket125()/passRowDto.getSocket125()*100);}}}
                if (i == 125) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket126(rowDto.getSocket126() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket126(totalRowDto.getSocket126() + 1);if ( 4 > (int)strDutMain.charAt(i) - 172){passRowDto.setSocket126(passRowDto.getSocket126() +1);}yieldRowDto.setSocket126(totalRowDto.getSocket126()/passRowDto.getSocket126()*100);}}}
                if (i == 126) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket127(rowDto.getSocket127() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket127(totalRowDto.getSocket127() + 1);if ( 4 > (int)strDutMain.charAt(i) - 173){passRowDto.setSocket127(passRowDto.getSocket127() +1);}yieldRowDto.setSocket127(totalRowDto.getSocket127()/passRowDto.getSocket127()*100);}}}
                if (i == 127) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket128(rowDto.getSocket128() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket128(totalRowDto.getSocket128() + 1);if ( 4 > (int)strDutMain.charAt(i) - 174){passRowDto.setSocket128(passRowDto.getSocket128() +1);}yieldRowDto.setSocket128(totalRowDto.getSocket128()/passRowDto.getSocket128()*100);}}}
                if (i == 128) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket129(rowDto.getSocket129() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket129(totalRowDto.getSocket129() + 1);if ( 4 > (int)strDutMain.charAt(i) - 175){passRowDto.setSocket129(passRowDto.getSocket129() +1);}yieldRowDto.setSocket129(totalRowDto.getSocket129()/passRowDto.getSocket129()*100);}}}
                if (i == 129) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket130(rowDto.getSocket130() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket130(totalRowDto.getSocket130() + 1);if ( 4 > (int)strDutMain.charAt(i) - 176){passRowDto.setSocket130(passRowDto.getSocket130() +1);}yieldRowDto.setSocket130(totalRowDto.getSocket130()/passRowDto.getSocket130()*100);}}}
                if (i == 130) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket131(rowDto.getSocket131() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket131(totalRowDto.getSocket131() + 1);if ( 4 > (int)strDutMain.charAt(i) - 177){passRowDto.setSocket131(passRowDto.getSocket131() +1);}yieldRowDto.setSocket131(totalRowDto.getSocket131()/passRowDto.getSocket131()*100);}}}
                if (i == 131) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket132(rowDto.getSocket132() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket132(totalRowDto.getSocket132() + 1);if ( 4 > (int)strDutMain.charAt(i) - 178){passRowDto.setSocket132(passRowDto.getSocket132() +1);}yieldRowDto.setSocket132(totalRowDto.getSocket132()/passRowDto.getSocket132()*100);}}}
                if (i == 132) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket133(rowDto.getSocket133() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket133(totalRowDto.getSocket133() + 1);if ( 4 > (int)strDutMain.charAt(i) - 179){passRowDto.setSocket133(passRowDto.getSocket133() +1);}yieldRowDto.setSocket133(totalRowDto.getSocket133()/passRowDto.getSocket133()*100);}}}
                if (i == 133) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket134(rowDto.getSocket134() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket134(totalRowDto.getSocket134() + 1);if ( 4 > (int)strDutMain.charAt(i) - 180){passRowDto.setSocket134(passRowDto.getSocket134() +1);}yieldRowDto.setSocket134(totalRowDto.getSocket134()/passRowDto.getSocket134()*100);}}}
                if (i == 134) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket135(rowDto.getSocket135() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket135(totalRowDto.getSocket135() + 1);if ( 4 > (int)strDutMain.charAt(i) - 181){passRowDto.setSocket135(passRowDto.getSocket135() +1);}yieldRowDto.setSocket135(totalRowDto.getSocket135()/passRowDto.getSocket135()*100);}}}
                if (i == 135) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket136(rowDto.getSocket136() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket136(totalRowDto.getSocket136() + 1);if ( 4 > (int)strDutMain.charAt(i) - 182){passRowDto.setSocket136(passRowDto.getSocket136() +1);}yieldRowDto.setSocket136(totalRowDto.getSocket136()/passRowDto.getSocket136()*100);}}}
                if (i == 136) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket137(rowDto.getSocket137() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket137(totalRowDto.getSocket137() + 1);if ( 4 > (int)strDutMain.charAt(i) - 183){passRowDto.setSocket137(passRowDto.getSocket137() +1);}yieldRowDto.setSocket137(totalRowDto.getSocket137()/passRowDto.getSocket137()*100);}}}
                if (i == 137) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket138(rowDto.getSocket138() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket138(totalRowDto.getSocket138() + 1);if ( 4 > (int)strDutMain.charAt(i) - 184){passRowDto.setSocket138(passRowDto.getSocket138() +1);}yieldRowDto.setSocket138(totalRowDto.getSocket138()/passRowDto.getSocket138()*100);}}}
                if (i == 138) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket139(rowDto.getSocket139() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket139(totalRowDto.getSocket139() + 1);if ( 4 > (int)strDutMain.charAt(i) - 185){passRowDto.setSocket139(passRowDto.getSocket139() +1);}yieldRowDto.setSocket139(totalRowDto.getSocket139()/passRowDto.getSocket139()*100);}}}
                if (i == 139) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket140(rowDto.getSocket140() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket140(totalRowDto.getSocket140() + 1);if ( 4 > (int)strDutMain.charAt(i) - 186){passRowDto.setSocket140(passRowDto.getSocket140() +1);}yieldRowDto.setSocket140(totalRowDto.getSocket140()/passRowDto.getSocket140()*100);}}}
                if (i == 140) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket141(rowDto.getSocket141() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket141(totalRowDto.getSocket141() + 1);if ( 4 > (int)strDutMain.charAt(i) - 187){passRowDto.setSocket141(passRowDto.getSocket141() +1);}yieldRowDto.setSocket141(totalRowDto.getSocket141()/passRowDto.getSocket141()*100);}}}
                if (i == 141) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket142(rowDto.getSocket142() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket142(totalRowDto.getSocket142() + 1);if ( 4 > (int)strDutMain.charAt(i) - 188){passRowDto.setSocket142(passRowDto.getSocket142() +1);}yieldRowDto.setSocket142(totalRowDto.getSocket142()/passRowDto.getSocket142()*100);}}}
                if (i == 142) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket143(rowDto.getSocket143() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket143(totalRowDto.getSocket143() + 1);if ( 4 > (int)strDutMain.charAt(i) - 189){passRowDto.setSocket143(passRowDto.getSocket143() +1);}yieldRowDto.setSocket143(totalRowDto.getSocket143()/passRowDto.getSocket143()*100);}}}
                if (i == 143) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket144(rowDto.getSocket144() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket144(totalRowDto.getSocket144() + 1);if ( 4 > (int)strDutMain.charAt(i) - 190){passRowDto.setSocket144(passRowDto.getSocket144() +1);}yieldRowDto.setSocket144(totalRowDto.getSocket144()/passRowDto.getSocket144()*100);}}}
                if (i == 144) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket145(rowDto.getSocket145() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket145(totalRowDto.getSocket145() + 1);if ( 4 > (int)strDutMain.charAt(i) - 191){passRowDto.setSocket145(passRowDto.getSocket145() +1);}yieldRowDto.setSocket145(totalRowDto.getSocket145()/passRowDto.getSocket145()*100);}}}
                if (i == 145) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket146(rowDto.getSocket146() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket146(totalRowDto.getSocket146() + 1);if ( 4 > (int)strDutMain.charAt(i) - 192){passRowDto.setSocket146(passRowDto.getSocket146() +1);}yieldRowDto.setSocket146(totalRowDto.getSocket146()/passRowDto.getSocket146()*100);}}}
                if (i == 146) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket147(rowDto.getSocket147() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket147(totalRowDto.getSocket147() + 1);if ( 4 > (int)strDutMain.charAt(i) - 193){passRowDto.setSocket147(passRowDto.getSocket147() +1);}yieldRowDto.setSocket147(totalRowDto.getSocket147()/passRowDto.getSocket147()*100);}}}
                if (i == 147) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket148(rowDto.getSocket148() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket148(totalRowDto.getSocket148() + 1);if ( 4 > (int)strDutMain.charAt(i) - 194){passRowDto.setSocket148(passRowDto.getSocket148() +1);}yieldRowDto.setSocket148(totalRowDto.getSocket148()/passRowDto.getSocket148()*100);}}}
                if (i == 148) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket149(rowDto.getSocket149() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket149(totalRowDto.getSocket149() + 1);if ( 4 > (int)strDutMain.charAt(i) - 195){passRowDto.setSocket149(passRowDto.getSocket149() +1);}yieldRowDto.setSocket149(totalRowDto.getSocket149()/passRowDto.getSocket149()*100);}}}
                if (i == 149) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket150(rowDto.getSocket150() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket150(totalRowDto.getSocket150() + 1);if ( 4 > (int)strDutMain.charAt(i) - 196){passRowDto.setSocket150(passRowDto.getSocket150() +1);}yieldRowDto.setSocket150(totalRowDto.getSocket150()/passRowDto.getSocket150()*100);}}}
                if (i == 150) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket151(rowDto.getSocket151() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket151(totalRowDto.getSocket151() + 1);if ( 4 > (int)strDutMain.charAt(i) - 197){passRowDto.setSocket151(passRowDto.getSocket151() +1);}yieldRowDto.setSocket151(totalRowDto.getSocket151()/passRowDto.getSocket151()*100);}}}
                if (i == 151) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket152(rowDto.getSocket152() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket152(totalRowDto.getSocket152() + 1);if ( 4 > (int)strDutMain.charAt(i) - 198){passRowDto.setSocket152(passRowDto.getSocket152() +1);}yieldRowDto.setSocket152(totalRowDto.getSocket152()/passRowDto.getSocket152()*100);}}}
                if (i == 152) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket153(rowDto.getSocket153() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket153(totalRowDto.getSocket153() + 1);if ( 4 > (int)strDutMain.charAt(i) - 199){passRowDto.setSocket153(passRowDto.getSocket153() +1);}yieldRowDto.setSocket153(totalRowDto.getSocket153()/passRowDto.getSocket153()*100);}}}
                if (i == 153) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket154(rowDto.getSocket154() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket154(totalRowDto.getSocket154() + 1);if ( 4 > (int)strDutMain.charAt(i) - 200){passRowDto.setSocket154(passRowDto.getSocket154() +1);}yieldRowDto.setSocket154(totalRowDto.getSocket154()/passRowDto.getSocket154()*100);}}}
                if (i == 154) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket155(rowDto.getSocket155() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket155(totalRowDto.getSocket155() + 1);if ( 4 > (int)strDutMain.charAt(i) - 201){passRowDto.setSocket155(passRowDto.getSocket155() +1);}yieldRowDto.setSocket155(totalRowDto.getSocket155()/passRowDto.getSocket155()*100);}}}
                if (i == 155) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket156(rowDto.getSocket156() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket156(totalRowDto.getSocket156() + 1);if ( 4 > (int)strDutMain.charAt(i) - 202){passRowDto.setSocket156(passRowDto.getSocket156() +1);}yieldRowDto.setSocket156(totalRowDto.getSocket156()/passRowDto.getSocket156()*100);}}}
                if (i == 156) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket157(rowDto.getSocket157() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket157(totalRowDto.getSocket157() + 1);if ( 4 > (int)strDutMain.charAt(i) - 203){passRowDto.setSocket157(passRowDto.getSocket157() +1);}yieldRowDto.setSocket157(totalRowDto.getSocket157()/passRowDto.getSocket157()*100);}}}
                if (i == 157) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket158(rowDto.getSocket158() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket158(totalRowDto.getSocket158() + 1);if ( 4 > (int)strDutMain.charAt(i) - 204){passRowDto.setSocket158(passRowDto.getSocket158() +1);}yieldRowDto.setSocket158(totalRowDto.getSocket158()/passRowDto.getSocket158()*100);}}}
                if (i == 158) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket159(rowDto.getSocket159() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket159(totalRowDto.getSocket159() + 1);if ( 4 > (int)strDutMain.charAt(i) - 205){passRowDto.setSocket159(passRowDto.getSocket159() +1);}yieldRowDto.setSocket159(totalRowDto.getSocket159()/passRowDto.getSocket159()*100);}}}
                if (i == 159) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket160(rowDto.getSocket160() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket160(totalRowDto.getSocket160() + 1);if ( 4 > (int)strDutMain.charAt(i) - 206){passRowDto.setSocket160(passRowDto.getSocket160() +1);}yieldRowDto.setSocket160(totalRowDto.getSocket160()/passRowDto.getSocket160()*100);}}}
                if (i == 160) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket161(rowDto.getSocket161() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket161(totalRowDto.getSocket161() + 1);if ( 4 > (int)strDutMain.charAt(i) - 207){passRowDto.setSocket161(passRowDto.getSocket161() +1);}yieldRowDto.setSocket161(totalRowDto.getSocket161()/passRowDto.getSocket161()*100);}}}
                if (i == 161) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket162(rowDto.getSocket162() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket162(totalRowDto.getSocket162() + 1);if ( 4 > (int)strDutMain.charAt(i) - 208){passRowDto.setSocket162(passRowDto.getSocket162() +1);}yieldRowDto.setSocket162(totalRowDto.getSocket162()/passRowDto.getSocket162()*100);}}}
                if (i == 162) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket163(rowDto.getSocket163() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket163(totalRowDto.getSocket163() + 1);if ( 4 > (int)strDutMain.charAt(i) - 209){passRowDto.setSocket163(passRowDto.getSocket163() +1);}yieldRowDto.setSocket163(totalRowDto.getSocket163()/passRowDto.getSocket163()*100);}}}
                if (i == 163) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket164(rowDto.getSocket164() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket164(totalRowDto.getSocket164() + 1);if ( 4 > (int)strDutMain.charAt(i) - 210){passRowDto.setSocket164(passRowDto.getSocket164() +1);}yieldRowDto.setSocket164(totalRowDto.getSocket164()/passRowDto.getSocket164()*100);}}}
                if (i == 164) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket165(rowDto.getSocket165() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket165(totalRowDto.getSocket165() + 1);if ( 4 > (int)strDutMain.charAt(i) - 211){passRowDto.setSocket165(passRowDto.getSocket165() +1);}yieldRowDto.setSocket165(totalRowDto.getSocket165()/passRowDto.getSocket165()*100);}}}
                if (i == 165) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket166(rowDto.getSocket166() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket166(totalRowDto.getSocket166() + 1);if ( 4 > (int)strDutMain.charAt(i) - 212){passRowDto.setSocket166(passRowDto.getSocket166() +1);}yieldRowDto.setSocket166(totalRowDto.getSocket166()/passRowDto.getSocket166()*100);}}}
                if (i == 166) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket167(rowDto.getSocket167() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket167(totalRowDto.getSocket167() + 1);if ( 4 > (int)strDutMain.charAt(i) - 213){passRowDto.setSocket167(passRowDto.getSocket167() +1);}yieldRowDto.setSocket167(totalRowDto.getSocket167()/passRowDto.getSocket167()*100);}}}
                if (i == 167) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket168(rowDto.getSocket168() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket168(totalRowDto.getSocket168() + 1);if ( 4 > (int)strDutMain.charAt(i) - 214){passRowDto.setSocket168(passRowDto.getSocket168() +1);}yieldRowDto.setSocket168(totalRowDto.getSocket168()/passRowDto.getSocket168()*100);}}}
                if (i == 168) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket169(rowDto.getSocket169() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket169(totalRowDto.getSocket169() + 1);if ( 4 > (int)strDutMain.charAt(i) - 215){passRowDto.setSocket169(passRowDto.getSocket169() +1);}yieldRowDto.setSocket169(totalRowDto.getSocket169()/passRowDto.getSocket169()*100);}}}
                if (i == 169) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket170(rowDto.getSocket170() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket170(totalRowDto.getSocket170() + 1);if ( 4 > (int)strDutMain.charAt(i) - 216){passRowDto.setSocket170(passRowDto.getSocket170() +1);}yieldRowDto.setSocket170(totalRowDto.getSocket170()/passRowDto.getSocket170()*100);}}}
                if (i == 170) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket171(rowDto.getSocket171() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket171(totalRowDto.getSocket171() + 1);if ( 4 > (int)strDutMain.charAt(i) - 217){passRowDto.setSocket171(passRowDto.getSocket171() +1);}yieldRowDto.setSocket171(totalRowDto.getSocket171()/passRowDto.getSocket171()*100);}}}
                if (i == 171) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket172(rowDto.getSocket172() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket172(totalRowDto.getSocket172() + 1);if ( 4 > (int)strDutMain.charAt(i) - 218){passRowDto.setSocket172(passRowDto.getSocket172() +1);}yieldRowDto.setSocket172(totalRowDto.getSocket172()/passRowDto.getSocket172()*100);}}}
                if (i == 172) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket173(rowDto.getSocket173() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket173(totalRowDto.getSocket173() + 1);if ( 4 > (int)strDutMain.charAt(i) - 219){passRowDto.setSocket173(passRowDto.getSocket173() +1);}yieldRowDto.setSocket173(totalRowDto.getSocket173()/passRowDto.getSocket173()*100);}}}
                if (i == 173) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket174(rowDto.getSocket174() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket174(totalRowDto.getSocket174() + 1);if ( 4 > (int)strDutMain.charAt(i) - 220){passRowDto.setSocket174(passRowDto.getSocket174() +1);}yieldRowDto.setSocket174(totalRowDto.getSocket174()/passRowDto.getSocket174()*100);}}}
                if (i == 174) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket175(rowDto.getSocket175() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket175(totalRowDto.getSocket175() + 1);if ( 4 > (int)strDutMain.charAt(i) - 221){passRowDto.setSocket175(passRowDto.getSocket175() +1);}yieldRowDto.setSocket175(totalRowDto.getSocket175()/passRowDto.getSocket175()*100);}}}
                if (i == 175) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket176(rowDto.getSocket176() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket176(totalRowDto.getSocket176() + 1);if ( 4 > (int)strDutMain.charAt(i) - 222){passRowDto.setSocket176(passRowDto.getSocket176() +1);}yieldRowDto.setSocket176(totalRowDto.getSocket176()/passRowDto.getSocket176()*100);}}}
                if (i == 176) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket177(rowDto.getSocket177() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket177(totalRowDto.getSocket177() + 1);if ( 4 > (int)strDutMain.charAt(i) - 223){passRowDto.setSocket177(passRowDto.getSocket177() +1);}yieldRowDto.setSocket177(totalRowDto.getSocket177()/passRowDto.getSocket177()*100);}}}
                if (i == 177) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket178(rowDto.getSocket178() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket178(totalRowDto.getSocket178() + 1);if ( 4 > (int)strDutMain.charAt(i) - 224){passRowDto.setSocket178(passRowDto.getSocket178() +1);}yieldRowDto.setSocket178(totalRowDto.getSocket178()/passRowDto.getSocket178()*100);}}}
                if (i == 178) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket179(rowDto.getSocket179() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket179(totalRowDto.getSocket179() + 1);if ( 4 > (int)strDutMain.charAt(i) - 225){passRowDto.setSocket179(passRowDto.getSocket179() +1);}yieldRowDto.setSocket179(totalRowDto.getSocket179()/passRowDto.getSocket179()*100);}}}
                if (i == 179) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket180(rowDto.getSocket180() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket180(totalRowDto.getSocket180() + 1);if ( 4 > (int)strDutMain.charAt(i) - 226){passRowDto.setSocket180(passRowDto.getSocket180() +1);}yieldRowDto.setSocket180(totalRowDto.getSocket180()/passRowDto.getSocket180()*100);}}}
                if (i == 180) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket181(rowDto.getSocket181() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket181(totalRowDto.getSocket181() + 1);if ( 4 > (int)strDutMain.charAt(i) - 227){passRowDto.setSocket181(passRowDto.getSocket181() +1);}yieldRowDto.setSocket181(totalRowDto.getSocket181()/passRowDto.getSocket181()*100);}}}
                if (i == 181) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket182(rowDto.getSocket182() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket182(totalRowDto.getSocket182() + 1);if ( 4 > (int)strDutMain.charAt(i) - 228){passRowDto.setSocket182(passRowDto.getSocket182() +1);}yieldRowDto.setSocket182(totalRowDto.getSocket182()/passRowDto.getSocket182()*100);}}}
                if (i == 182) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket183(rowDto.getSocket183() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket183(totalRowDto.getSocket183() + 1);if ( 4 > (int)strDutMain.charAt(i) - 229){passRowDto.setSocket183(passRowDto.getSocket183() +1);}yieldRowDto.setSocket183(totalRowDto.getSocket183()/passRowDto.getSocket183()*100);}}}
                if (i == 183) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket184(rowDto.getSocket184() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket184(totalRowDto.getSocket184() + 1);if ( 4 > (int)strDutMain.charAt(i) - 230){passRowDto.setSocket184(passRowDto.getSocket184() +1);}yieldRowDto.setSocket184(totalRowDto.getSocket184()/passRowDto.getSocket184()*100);}}}
                if (i == 184) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket185(rowDto.getSocket185() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket185(totalRowDto.getSocket185() + 1);if ( 4 > (int)strDutMain.charAt(i) - 231){passRowDto.setSocket185(passRowDto.getSocket185() +1);}yieldRowDto.setSocket185(totalRowDto.getSocket185()/passRowDto.getSocket185()*100);}}}
                if (i == 185) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket186(rowDto.getSocket186() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket186(totalRowDto.getSocket186() + 1);if ( 4 > (int)strDutMain.charAt(i) - 232){passRowDto.setSocket186(passRowDto.getSocket186() +1);}yieldRowDto.setSocket186(totalRowDto.getSocket186()/passRowDto.getSocket186()*100);}}}
                if (i == 186) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket187(rowDto.getSocket187() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket187(totalRowDto.getSocket187() + 1);if ( 4 > (int)strDutMain.charAt(i) - 233){passRowDto.setSocket187(passRowDto.getSocket187() +1);}yieldRowDto.setSocket187(totalRowDto.getSocket187()/passRowDto.getSocket187()*100);}}}
                if (i == 187) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket188(rowDto.getSocket188() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket188(totalRowDto.getSocket188() + 1);if ( 4 > (int)strDutMain.charAt(i) - 234){passRowDto.setSocket188(passRowDto.getSocket188() +1);}yieldRowDto.setSocket188(totalRowDto.getSocket188()/passRowDto.getSocket188()*100);}}}
                if (i == 188) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket189(rowDto.getSocket189() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket189(totalRowDto.getSocket189() + 1);if ( 4 > (int)strDutMain.charAt(i) - 235){passRowDto.setSocket189(passRowDto.getSocket189() +1);}yieldRowDto.setSocket189(totalRowDto.getSocket189()/passRowDto.getSocket189()*100);}}}
                if (i == 189) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket190(rowDto.getSocket190() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket190(totalRowDto.getSocket190() + 1);if ( 4 > (int)strDutMain.charAt(i) - 236){passRowDto.setSocket190(passRowDto.getSocket190() +1);}yieldRowDto.setSocket190(totalRowDto.getSocket190()/passRowDto.getSocket190()*100);}}}
                if (i == 190) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket191(rowDto.getSocket191() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket191(totalRowDto.getSocket191() + 1);if ( 4 > (int)strDutMain.charAt(i) - 237){passRowDto.setSocket191(passRowDto.getSocket191() +1);}yieldRowDto.setSocket191(totalRowDto.getSocket191()/passRowDto.getSocket191()*100);}}}
                if (i == 191) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket192(rowDto.getSocket192() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket192(totalRowDto.getSocket192() + 1);if ( 4 > (int)strDutMain.charAt(i) - 238){passRowDto.setSocket192(passRowDto.getSocket192() +1);}yieldRowDto.setSocket192(totalRowDto.getSocket192()/passRowDto.getSocket192()*100);}}}
                if (i == 192) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket193(rowDto.getSocket193() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket193(totalRowDto.getSocket193() + 1);if ( 4 > (int)strDutMain.charAt(i) - 239){passRowDto.setSocket193(passRowDto.getSocket193() +1);}yieldRowDto.setSocket193(totalRowDto.getSocket193()/passRowDto.getSocket193()*100);}}}
                if (i == 193) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket194(rowDto.getSocket194() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket194(totalRowDto.getSocket194() + 1);if ( 4 > (int)strDutMain.charAt(i) - 240){passRowDto.setSocket194(passRowDto.getSocket194() +1);}yieldRowDto.setSocket194(totalRowDto.getSocket194()/passRowDto.getSocket194()*100);}}}
                if (i == 194) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket195(rowDto.getSocket195() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket195(totalRowDto.getSocket195() + 1);if ( 4 > (int)strDutMain.charAt(i) - 241){passRowDto.setSocket195(passRowDto.getSocket195() +1);}yieldRowDto.setSocket195(totalRowDto.getSocket195()/passRowDto.getSocket195()*100);}}}
                if (i == 195) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket196(rowDto.getSocket196() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket196(totalRowDto.getSocket196() + 1);if ( 4 > (int)strDutMain.charAt(i) - 242){passRowDto.setSocket196(passRowDto.getSocket196() +1);}yieldRowDto.setSocket196(totalRowDto.getSocket196()/passRowDto.getSocket196()*100);}}}
                if (i == 196) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket197(rowDto.getSocket197() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket197(totalRowDto.getSocket197() + 1);if ( 4 > (int)strDutMain.charAt(i) - 243){passRowDto.setSocket197(passRowDto.getSocket197() +1);}yieldRowDto.setSocket197(totalRowDto.getSocket197()/passRowDto.getSocket197()*100);}}}
                if (i == 197) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket198(rowDto.getSocket198() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket198(totalRowDto.getSocket198() + 1);if ( 4 > (int)strDutMain.charAt(i) - 244){passRowDto.setSocket198(passRowDto.getSocket198() +1);}yieldRowDto.setSocket198(totalRowDto.getSocket198()/passRowDto.getSocket198()*100);}}}
                if (i == 198) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket199(rowDto.getSocket199() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket199(totalRowDto.getSocket199() + 1);if ( 4 > (int)strDutMain.charAt(i) - 245){passRowDto.setSocket199(passRowDto.getSocket199() +1);}yieldRowDto.setSocket199(totalRowDto.getSocket199()/passRowDto.getSocket199()*100);}}}
                if (i == 199) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket200(rowDto.getSocket200() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket200(totalRowDto.getSocket200() + 1);if ( 4 > (int)strDutMain.charAt(i) - 246){passRowDto.setSocket200(passRowDto.getSocket200() +1);}yieldRowDto.setSocket200(totalRowDto.getSocket200()/passRowDto.getSocket200()*100);}}}
                if (i == 200) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket201(rowDto.getSocket201() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket201(totalRowDto.getSocket201() + 1);if ( 4 > (int)strDutMain.charAt(i) - 247){passRowDto.setSocket201(passRowDto.getSocket201() +1);}yieldRowDto.setSocket201(totalRowDto.getSocket201()/passRowDto.getSocket201()*100);}}}
                if (i == 201) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket202(rowDto.getSocket202() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket202(totalRowDto.getSocket202() + 1);if ( 4 > (int)strDutMain.charAt(i) - 248){passRowDto.setSocket202(passRowDto.getSocket202() +1);}yieldRowDto.setSocket202(totalRowDto.getSocket202()/passRowDto.getSocket202()*100);}}}
                if (i == 202) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket203(rowDto.getSocket203() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket203(totalRowDto.getSocket203() + 1);if ( 4 > (int)strDutMain.charAt(i) - 249){passRowDto.setSocket203(passRowDto.getSocket203() +1);}yieldRowDto.setSocket203(totalRowDto.getSocket203()/passRowDto.getSocket203()*100);}}}
                if (i == 203) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket204(rowDto.getSocket204() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket204(totalRowDto.getSocket204() + 1);if ( 4 > (int)strDutMain.charAt(i) - 250){passRowDto.setSocket204(passRowDto.getSocket204() +1);}yieldRowDto.setSocket204(totalRowDto.getSocket204()/passRowDto.getSocket204()*100);}}}
                if (i == 204) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket205(rowDto.getSocket205() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket205(totalRowDto.getSocket205() + 1);if ( 4 > (int)strDutMain.charAt(i) - 251){passRowDto.setSocket205(passRowDto.getSocket205() +1);}yieldRowDto.setSocket205(totalRowDto.getSocket205()/passRowDto.getSocket205()*100);}}}
                if (i == 205) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket206(rowDto.getSocket206() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket206(totalRowDto.getSocket206() + 1);if ( 4 > (int)strDutMain.charAt(i) - 252){passRowDto.setSocket206(passRowDto.getSocket206() +1);}yieldRowDto.setSocket206(totalRowDto.getSocket206()/passRowDto.getSocket206()*100);}}}
                if (i == 206) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket207(rowDto.getSocket207() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket207(totalRowDto.getSocket207() + 1);if ( 4 > (int)strDutMain.charAt(i) - 253){passRowDto.setSocket207(passRowDto.getSocket207() +1);}yieldRowDto.setSocket207(totalRowDto.getSocket207()/passRowDto.getSocket207()*100);}}}
                if (i == 207) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket208(rowDto.getSocket208() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket208(totalRowDto.getSocket208() + 1);if ( 4 > (int)strDutMain.charAt(i) - 254){passRowDto.setSocket208(passRowDto.getSocket208() +1);}yieldRowDto.setSocket208(totalRowDto.getSocket208()/passRowDto.getSocket208()*100);}}}
                if (i == 208) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket209(rowDto.getSocket209() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket209(totalRowDto.getSocket209() + 1);if ( 4 > (int)strDutMain.charAt(i) - 255){passRowDto.setSocket209(passRowDto.getSocket209() +1);}yieldRowDto.setSocket209(totalRowDto.getSocket209()/passRowDto.getSocket209()*100);}}}
                if (i == 209) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket210(rowDto.getSocket210() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket210(totalRowDto.getSocket210() + 1);if ( 4 > (int)strDutMain.charAt(i) - 256){passRowDto.setSocket210(passRowDto.getSocket210() +1);}yieldRowDto.setSocket210(totalRowDto.getSocket210()/passRowDto.getSocket210()*100);}}}
                if (i == 210) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket211(rowDto.getSocket211() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket211(totalRowDto.getSocket211() + 1);if ( 4 > (int)strDutMain.charAt(i) - 257){passRowDto.setSocket211(passRowDto.getSocket211() +1);}yieldRowDto.setSocket211(totalRowDto.getSocket211()/passRowDto.getSocket211()*100);}}}
                if (i == 211) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket212(rowDto.getSocket212() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket212(totalRowDto.getSocket212() + 1);if ( 4 > (int)strDutMain.charAt(i) - 258){passRowDto.setSocket212(passRowDto.getSocket212() +1);}yieldRowDto.setSocket212(totalRowDto.getSocket212()/passRowDto.getSocket212()*100);}}}
                if (i == 212) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket213(rowDto.getSocket213() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket213(totalRowDto.getSocket213() + 1);if ( 4 > (int)strDutMain.charAt(i) - 259){passRowDto.setSocket213(passRowDto.getSocket213() +1);}yieldRowDto.setSocket213(totalRowDto.getSocket213()/passRowDto.getSocket213()*100);}}}
                if (i == 213) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket214(rowDto.getSocket214() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket214(totalRowDto.getSocket214() + 1);if ( 4 > (int)strDutMain.charAt(i) - 260){passRowDto.setSocket214(passRowDto.getSocket214() +1);}yieldRowDto.setSocket214(totalRowDto.getSocket214()/passRowDto.getSocket214()*100);}}}
                if (i == 214) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket215(rowDto.getSocket215() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket215(totalRowDto.getSocket215() + 1);if ( 4 > (int)strDutMain.charAt(i) - 261){passRowDto.setSocket215(passRowDto.getSocket215() +1);}yieldRowDto.setSocket215(totalRowDto.getSocket215()/passRowDto.getSocket215()*100);}}}
                if (i == 215) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket216(rowDto.getSocket216() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket216(totalRowDto.getSocket216() + 1);if ( 4 > (int)strDutMain.charAt(i) - 262){passRowDto.setSocket216(passRowDto.getSocket216() +1);}yieldRowDto.setSocket216(totalRowDto.getSocket216()/passRowDto.getSocket216()*100);}}}
                if (i == 216) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket217(rowDto.getSocket217() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket217(totalRowDto.getSocket217() + 1);if ( 4 > (int)strDutMain.charAt(i) - 263){passRowDto.setSocket217(passRowDto.getSocket217() +1);}yieldRowDto.setSocket217(totalRowDto.getSocket217()/passRowDto.getSocket217()*100);}}}
                if (i == 217) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket218(rowDto.getSocket218() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket218(totalRowDto.getSocket218() + 1);if ( 4 > (int)strDutMain.charAt(i) - 264){passRowDto.setSocket218(passRowDto.getSocket218() +1);}yieldRowDto.setSocket218(totalRowDto.getSocket218()/passRowDto.getSocket218()*100);}}}
                if (i == 218) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket219(rowDto.getSocket219() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket219(totalRowDto.getSocket219() + 1);if ( 4 > (int)strDutMain.charAt(i) - 265){passRowDto.setSocket219(passRowDto.getSocket219() +1);}yieldRowDto.setSocket219(totalRowDto.getSocket219()/passRowDto.getSocket219()*100);}}}
                if (i == 219) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket220(rowDto.getSocket220() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket220(totalRowDto.getSocket220() + 1);if ( 4 > (int)strDutMain.charAt(i) - 266){passRowDto.setSocket220(passRowDto.getSocket220() +1);}yieldRowDto.setSocket220(totalRowDto.getSocket220()/passRowDto.getSocket220()*100);}}}
                if (i == 220) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket221(rowDto.getSocket221() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket221(totalRowDto.getSocket221() + 1);if ( 4 > (int)strDutMain.charAt(i) - 267){passRowDto.setSocket221(passRowDto.getSocket221() +1);}yieldRowDto.setSocket221(totalRowDto.getSocket221()/passRowDto.getSocket221()*100);}}}
                if (i == 221) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket222(rowDto.getSocket222() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket222(totalRowDto.getSocket222() + 1);if ( 4 > (int)strDutMain.charAt(i) - 268){passRowDto.setSocket222(passRowDto.getSocket222() +1);}yieldRowDto.setSocket222(totalRowDto.getSocket222()/passRowDto.getSocket222()*100);}}}
                if (i == 222) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket223(rowDto.getSocket223() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket223(totalRowDto.getSocket223() + 1);if ( 4 > (int)strDutMain.charAt(i) - 269){passRowDto.setSocket223(passRowDto.getSocket223() +1);}yieldRowDto.setSocket223(totalRowDto.getSocket223()/passRowDto.getSocket223()*100);}}}
                if (i == 223) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket224(rowDto.getSocket224() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket224(totalRowDto.getSocket224() + 1);if ( 4 > (int)strDutMain.charAt(i) - 270){passRowDto.setSocket224(passRowDto.getSocket224() +1);}yieldRowDto.setSocket224(totalRowDto.getSocket224()/passRowDto.getSocket224()*100);}}}
                if (i == 224) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket225(rowDto.getSocket225() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket225(totalRowDto.getSocket225() + 1);if ( 4 > (int)strDutMain.charAt(i) - 271){passRowDto.setSocket225(passRowDto.getSocket225() +1);}yieldRowDto.setSocket225(totalRowDto.getSocket225()/passRowDto.getSocket225()*100);}}}
                if (i == 225) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket226(rowDto.getSocket226() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket226(totalRowDto.getSocket226() + 1);if ( 4 > (int)strDutMain.charAt(i) - 272){passRowDto.setSocket226(passRowDto.getSocket226() +1);}yieldRowDto.setSocket226(totalRowDto.getSocket226()/passRowDto.getSocket226()*100);}}}
                if (i == 226) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket227(rowDto.getSocket227() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket227(totalRowDto.getSocket227() + 1);if ( 4 > (int)strDutMain.charAt(i) - 273){passRowDto.setSocket227(passRowDto.getSocket227() +1);}yieldRowDto.setSocket227(totalRowDto.getSocket227()/passRowDto.getSocket227()*100);}}}
                if (i == 227) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket228(rowDto.getSocket228() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket228(totalRowDto.getSocket228() + 1);if ( 4 > (int)strDutMain.charAt(i) - 274){passRowDto.setSocket228(passRowDto.getSocket228() +1);}yieldRowDto.setSocket228(totalRowDto.getSocket228()/passRowDto.getSocket228()*100);}}}
                if (i == 228) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket229(rowDto.getSocket229() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket229(totalRowDto.getSocket229() + 1);if ( 4 > (int)strDutMain.charAt(i) - 275){passRowDto.setSocket229(passRowDto.getSocket229() +1);}yieldRowDto.setSocket229(totalRowDto.getSocket229()/passRowDto.getSocket229()*100);}}}
                if (i == 229) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket230(rowDto.getSocket230() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket230(totalRowDto.getSocket230() + 1);if ( 4 > (int)strDutMain.charAt(i) - 276){passRowDto.setSocket230(passRowDto.getSocket230() +1);}yieldRowDto.setSocket230(totalRowDto.getSocket230()/passRowDto.getSocket230()*100);}}}
                if (i == 230) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket231(rowDto.getSocket231() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket231(totalRowDto.getSocket231() + 1);if ( 4 > (int)strDutMain.charAt(i) - 277){passRowDto.setSocket231(passRowDto.getSocket231() +1);}yieldRowDto.setSocket231(totalRowDto.getSocket231()/passRowDto.getSocket231()*100);}}}
                if (i == 231) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket232(rowDto.getSocket232() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket232(totalRowDto.getSocket232() + 1);if ( 4 > (int)strDutMain.charAt(i) - 278){passRowDto.setSocket232(passRowDto.getSocket232() +1);}yieldRowDto.setSocket232(totalRowDto.getSocket232()/passRowDto.getSocket232()*100);}}}
                if (i == 232) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket233(rowDto.getSocket233() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket233(totalRowDto.getSocket233() + 1);if ( 4 > (int)strDutMain.charAt(i) - 279){passRowDto.setSocket233(passRowDto.getSocket233() +1);}yieldRowDto.setSocket233(totalRowDto.getSocket233()/passRowDto.getSocket233()*100);}}}
                if (i == 233) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket234(rowDto.getSocket234() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket234(totalRowDto.getSocket234() + 1);if ( 4 > (int)strDutMain.charAt(i) - 280){passRowDto.setSocket234(passRowDto.getSocket234() +1);}yieldRowDto.setSocket234(totalRowDto.getSocket234()/passRowDto.getSocket234()*100);}}}
                if (i == 234) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket235(rowDto.getSocket235() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket235(totalRowDto.getSocket235() + 1);if ( 4 > (int)strDutMain.charAt(i) - 281){passRowDto.setSocket235(passRowDto.getSocket235() +1);}yieldRowDto.setSocket235(totalRowDto.getSocket235()/passRowDto.getSocket235()*100);}}}
                if (i == 235) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket236(rowDto.getSocket236() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket236(totalRowDto.getSocket236() + 1);if ( 4 > (int)strDutMain.charAt(i) - 282){passRowDto.setSocket236(passRowDto.getSocket236() +1);}yieldRowDto.setSocket236(totalRowDto.getSocket236()/passRowDto.getSocket236()*100);}}}
                if (i == 236) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket237(rowDto.getSocket237() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket237(totalRowDto.getSocket237() + 1);if ( 4 > (int)strDutMain.charAt(i) - 283){passRowDto.setSocket237(passRowDto.getSocket237() +1);}yieldRowDto.setSocket237(totalRowDto.getSocket237()/passRowDto.getSocket237()*100);}}}
                if (i == 237) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket238(rowDto.getSocket238() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket238(totalRowDto.getSocket238() + 1);if ( 4 > (int)strDutMain.charAt(i) - 284){passRowDto.setSocket238(passRowDto.getSocket238() +1);}yieldRowDto.setSocket238(totalRowDto.getSocket238()/passRowDto.getSocket238()*100);}}}
                if (i == 238) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket239(rowDto.getSocket239() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket239(totalRowDto.getSocket239() + 1);if ( 4 > (int)strDutMain.charAt(i) - 285){passRowDto.setSocket239(passRowDto.getSocket239() +1);}yieldRowDto.setSocket239(totalRowDto.getSocket239()/passRowDto.getSocket239()*100);}}}
                if (i == 239) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket240(rowDto.getSocket240() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket240(totalRowDto.getSocket240() + 1);if ( 4 > (int)strDutMain.charAt(i) - 286){passRowDto.setSocket240(passRowDto.getSocket240() +1);}yieldRowDto.setSocket240(totalRowDto.getSocket240()/passRowDto.getSocket240()*100);}}}
                if (i == 240) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket241(rowDto.getSocket241() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket241(totalRowDto.getSocket241() + 1);if ( 4 > (int)strDutMain.charAt(i) - 287){passRowDto.setSocket241(passRowDto.getSocket241() +1);}yieldRowDto.setSocket241(totalRowDto.getSocket241()/passRowDto.getSocket241()*100);}}}
                if (i == 241) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket242(rowDto.getSocket242() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket242(totalRowDto.getSocket242() + 1);if ( 4 > (int)strDutMain.charAt(i) - 288){passRowDto.setSocket242(passRowDto.getSocket242() +1);}yieldRowDto.setSocket242(totalRowDto.getSocket242()/passRowDto.getSocket242()*100);}}}
                if (i == 242) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket243(rowDto.getSocket243() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket243(totalRowDto.getSocket243() + 1);if ( 4 > (int)strDutMain.charAt(i) - 289){passRowDto.setSocket243(passRowDto.getSocket243() +1);}yieldRowDto.setSocket243(totalRowDto.getSocket243()/passRowDto.getSocket243()*100);}}}
                if (i == 243) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket244(rowDto.getSocket244() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket244(totalRowDto.getSocket244() + 1);if ( 4 > (int)strDutMain.charAt(i) - 290){passRowDto.setSocket244(passRowDto.getSocket244() +1);}yieldRowDto.setSocket244(totalRowDto.getSocket244()/passRowDto.getSocket244()*100);}}}
                if (i == 244) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket245(rowDto.getSocket245() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket245(totalRowDto.getSocket245() + 1);if ( 4 > (int)strDutMain.charAt(i) - 291){passRowDto.setSocket245(passRowDto.getSocket245() +1);}yieldRowDto.setSocket245(totalRowDto.getSocket245()/passRowDto.getSocket245()*100);}}}
                if (i == 245) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket246(rowDto.getSocket246() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket246(totalRowDto.getSocket246() + 1);if ( 4 > (int)strDutMain.charAt(i) - 292){passRowDto.setSocket246(passRowDto.getSocket246() +1);}yieldRowDto.setSocket246(totalRowDto.getSocket246()/passRowDto.getSocket246()*100);}}}
                if (i == 246) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket247(rowDto.getSocket247() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket247(totalRowDto.getSocket247() + 1);if ( 4 > (int)strDutMain.charAt(i) - 293){passRowDto.setSocket247(passRowDto.getSocket247() +1);}yieldRowDto.setSocket247(totalRowDto.getSocket247()/passRowDto.getSocket247()*100);}}}
                if (i == 247) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket248(rowDto.getSocket248() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket248(totalRowDto.getSocket248() + 1);if ( 4 > (int)strDutMain.charAt(i) - 294){passRowDto.setSocket248(passRowDto.getSocket248() +1);}yieldRowDto.setSocket248(totalRowDto.getSocket248()/passRowDto.getSocket248()*100);}}}
                if (i == 248) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket249(rowDto.getSocket249() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket249(totalRowDto.getSocket249() + 1);if ( 4 > (int)strDutMain.charAt(i) - 295){passRowDto.setSocket249(passRowDto.getSocket249() +1);}yieldRowDto.setSocket249(totalRowDto.getSocket249()/passRowDto.getSocket249()*100);}}}
                if (i == 249) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket250(rowDto.getSocket250() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket250(totalRowDto.getSocket250() + 1);if ( 4 > (int)strDutMain.charAt(i) - 296){passRowDto.setSocket250(passRowDto.getSocket250() +1);}yieldRowDto.setSocket250(totalRowDto.getSocket250()/passRowDto.getSocket250()*100);}}}
                if (i == 250) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket251(rowDto.getSocket251() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket251(totalRowDto.getSocket251() + 1);if ( 4 > (int)strDutMain.charAt(i) - 297){passRowDto.setSocket251(passRowDto.getSocket251() +1);}yieldRowDto.setSocket251(totalRowDto.getSocket251()/passRowDto.getSocket251()*100);}}}
                if (i == 251) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket252(rowDto.getSocket252() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket252(totalRowDto.getSocket252() + 1);if ( 4 > (int)strDutMain.charAt(i) - 298){passRowDto.setSocket252(passRowDto.getSocket252() +1);}yieldRowDto.setSocket252(totalRowDto.getSocket252()/passRowDto.getSocket252()*100);}}}
                if (i == 252) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket253(rowDto.getSocket253() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket253(totalRowDto.getSocket253() + 1);if ( 4 > (int)strDutMain.charAt(i) - 299){passRowDto.setSocket253(passRowDto.getSocket253() +1);}yieldRowDto.setSocket253(totalRowDto.getSocket253()/passRowDto.getSocket253()*100);}}}
                if (i == 253) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket254(rowDto.getSocket254() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket254(totalRowDto.getSocket254() + 1);if ( 4 > (int)strDutMain.charAt(i) - 300){passRowDto.setSocket254(passRowDto.getSocket254() +1);}yieldRowDto.setSocket254(totalRowDto.getSocket254()/passRowDto.getSocket254()*100);}}}
                if (i == 254) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket255(rowDto.getSocket255() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket255(totalRowDto.getSocket255() + 1);if ( 4 > (int)strDutMain.charAt(i) - 301){passRowDto.setSocket255(passRowDto.getSocket255() +1);}yieldRowDto.setSocket255(totalRowDto.getSocket255()/passRowDto.getSocket255()*100);}}}
                if (i == 255) {for (int j = 0; j < 8; j++) {rowDto = compoDutMapResultDtoList.get(j);if (j == (int)strDutMain.charAt(i) - 49) {rowDto.setSocket256(rowDto.getSocket256() + 1);rowDto.setTotal(rowDto.getTotal() + 1);compoDutMapResultDtoList.set(j, rowDto);totalRowDto.setSocket256(totalRowDto.getSocket256() + 1);if ( 4 > (int)strDutMain.charAt(i) - 302){passRowDto.setSocket256(passRowDto.getSocket256() +1);}yieldRowDto.setSocket256(totalRowDto.getSocket256()/passRowDto.getSocket256()*100);}}}

            }

//            CompoDutMapResultDto compoDutMapResultDto = new CompoDutMapResultDto();

        }
        //각소켓의 합을 구한다.
        compoDutMapResultDtoList.add(totalRowDto);
        compoDutMapResultDtoList.add(passRowDto);
        compoDutMapResultDtoList.add(yieldRowDto);

        return compoDutMapResultDtoList;
    }
}
